         
  -----------------------------------------INTRODUCTION AND BASIC CONCEPT---------------------------------------------------------------------------------------------------------------------------       
         
         #WITH THE HELP OF EXPRESS JS WE CAN MAKE COMPLETE WEBSITE EASILY .IT IS JAVASCRIPT.
            #IT IS SERVER SIDE FRAME-WORK
            #IT IS WAY TO RUN JAVASCRIPT ON SERVER
            #IT SHOW PAGES ON HTTP SERVER.eg there is website name sanu and we have to show next page that is about section . [sanu/about]
            #IT AUTOMATICALLY SHOW 404 WHEN IT FIND LAST PAGE AND IF THERE IS NO NEXT PAGE
             STEPS:-
                1--create folder then npm init , fill all info in terminal then package.json will be created
                2--run this command {npm install express --save} to install express js in our folder.now our express will be in package.json
                3--if we want to delete express then run [npm untinstall express]
                4--const express = require('express')
                             const app = express()
                             const port = 3000
                             
                             app.get('/', (req, res) => {
                               res.send('Hello World!')
                             })
                             
                             app.listen(port, () => {
                               console.log(`Example app listening on port ${port}`)
                             })
                 *if i want to show next page that is about section
                       app.get('/About', (req, res) => {
                               res.send('hii this kumar sanu')
                             })
                             
                5--install thunderclient , it is just like postman.Lightweight Rest API Client for VS Code
                
                
                6--IF WE WANT TO SEND HTML PAGE AS res.send then do following :-
                                       const path =required('path');
                                    
                                       res.sendFile(path.join(__dirname,'index.html'));                 //dirname is directory name
                                       //in this way we can create a static website using node and express
                7--INSTALL --D NODMON. 
                     it is a tool which automatically terminate command line when we make any change ,no need to write ctrl+c ,node server.js every time.
                          --npm i nodemon
                          --nodemon server.js
                     
                     
                8--WE CAN ALSO SEND STAUS :-
                  res.status(500)     or   res.json({"sanu":19})
                
                
 ----------------------------------------------------------PUTTING STATICE FOLDER ON SERVER USING EXPRESS.JS-------------------------------------------------------------------------------------
  Just like a public folder in which we will put all file which will be served or shown to  client or people . eg-index.html , app.js etc..
               *FOR THIS WE WILL USE : app.use() 
                      app.use(express.static(path.join(__dirname ,public)))         //public is folder name
                      
                      34 min
    
    MIDDLEWARE:- const midleware=(res,next ,req)=>{       //next so that we can use another middleware
            console.log(req)
            next()
    }
      //below   app.use(express.static(path.join(__dirname ,public)))  
      app.use(middleware);
      
    ---------------------------------------------------------WHAT IF WE WANT TO ADD SOME PARAMETER -------------------------------------------------------------
       #
       app.get('/HELLO', (req, res) => {
                               res.send('hii this is')
                               
          *WE WANT TO ADD NAME PARAMETER THEN:---        
             app.get('/HELLO/:name', (req, res) => {
                               res.send('hii this is ' + res.params.name)
      -------------------------------------------------------------------------------------------------------------------------------------------------------------
                                    app.get() ==== to fatch what to show
                                    app.listen()====to host locally
                                   app.post()===to post output
      
      ------------------------------TEMPLATE----------------------------------------------------------------------------------------------------------------
      const bodyParser = require('body-parser')
const express = require('express')

   const app =express();

    app.get('/', (req, res) => {
    res.send('Hello World!')
              })
              
    app.post("/", (req, res) => {
    var itemName= req.body.Llist; 
     Name.push(itemName); 
                 })
                 
    app.listen(port, () => {
    console.log(`Example app listening on port ${port}`)
             })
                 
               
