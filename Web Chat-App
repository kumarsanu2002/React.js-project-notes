WEB CHAT APP USING REACT.JS AND REDUX.
  
    *STEPS TO SETUP ENVIROMENT FOR REDUX REACT-APP:-
     1--->install react-app with redux template using this code:-[npx create-react-app my-app --template redux]
     2--->delete unnessary folder from file like:-app.test , logo svg ,setup
     3--->clear all header code of app.js and clear code of app.css.
     4--->delete all features section code file except counterslice.js.
       
    
     *TO COMMENT YOU HAVE TO USE THIS:-  {/*  */}
     *USE REACT SNIPET USING(rfce) YOU HAVE TO INSTALL EXTENSION FOR THAT.
     *INSTALL MATERIAL UI AND THEN MATERIAL ICON FROM WEBSITE.
    
----------------------------------------------------------------------STRUCTURE-----------------------------------------------------------------------------------------------------------
    #USERSLICE-->STORE.JS-->FIREBASE-->LOGIN-->APP.JS -->Imessage(it contain sidebar and chat ,it is page appear after login)--->sidebar--->chat
    
       *STEPS OF CREATING APP SECTION:
              1--created sidebar and chat part of js with their css.And then imported them in app.js.
              2-- SIDEBAR:-
                       --sidebar_header
                       --sidebar_chats(no of user or group)
              3--CHAT PART:-
                        --charpart-header
                        --chatpart-message
                        --chatpart-input
              4--USERSLICE.JS ,CAHTSLICE {this is redux)
                    --then import that in store.js.
--------------------------------------------------------------CSS AND HTML---------------------------------------------------------------------------------------------------------
*TO MAKE ICON A BUTTON WE JUST DO THIS:- put particular icon between following tags
   <IconButton>
          <searchicon>
   </IconButton>

  *IF THERE IF INPUT DIV AND IT HAD CLASS CALL "SIDEBAR-INPUT" AND IF WE WANT TO MAKE CSS CHANGE TO INNER OF INPUT THE WE UES:
         [ .sidebar-input > input] --> there > means inside input .
         
   * IF SMALL IS CLASS/DIV  INSIDE SIDEBARCHAT AND WE WANT TO MODIFY CSS OF SMALL THEN  WE WILL USE THIS :-
                    [ SidebarChat_info > small  ]
*OVERFLOW ---it is scrolling function in css
*  <SwipeableDrawer>   </SwipeableDrawer> -->it is tag in which we will that page that will be shown dropdown or when out screen will be minimzed.
----------------------------------------------------------------FUNCTION IN RECT FOR DIFFRENT WORK-------------------------------------------------------------------------------
     #1--> BUTTON AND INPUT   
              *FUNCTION
                        const[Input ,setInput] =useState("");//to keep track of input
                         const sendMessage=(e)=>{
                         e.preventDefault(); //so that after refresh its not  gone

                         setInput("");  //so that after sending messagge the input gets erase so that we can write out next message
              *PLACE TO BE IMPLEMENTED THIS FUNCTON
                         <form action="">
                          <input placeholder="Type Message"  
                          onChange={e=>setInput(e.target.value)} //on change what we type it get change in input
                          value={Input}
                          type="text" />
                          <button onClick={sendMessage}>
                          send message</button>
                          </form>


      #2-->LOGIN WITH FIREBASE (LOGIN.JS)
      
                           const signIn = e => {
                            e.preventDefault();
                            //   before this enable the authentication in your firebase and select the google //method
                            //import auth and provider
                            // signin with the auth protocol //This will update the authUser and in App.js will listen to
                            // whenever the user changes
                            auth.signInWithPopup(provider).catch(err => alert(err.message));
                          };
                *PLACE TO BE IMPLEMENTED THIS FUNCTON
                               <Button type="submit" onClick={signIn}>
                                       Sign in With Google
                                </Button>
                                      
                                      
        #3-->APP.JS 
              
                   const user = useSelector(selectUser);//this is to select user
                    const dispatch = useDispatch(); //it is tool to use logout and login fuction
                    useEffect(() => {
                      auth.onAuthStateChanged(authUser => {
                        if (authUser) {
                          //user if login
                          dispatch(
                            login({ //imported from usesilce
                              uid: authUser.uid,
                              photo: authUser.photoURL,     //all this form google authentication
                              email: authUser.email,
                              displayName: authUser.displayName
                            })
                          );
                        } else {
                          //user is loged out
                          dispatch(logout());
                        }
                      });
                    }, [dispatch]);


                    return <div className="app">{user ? <Imessage /> : <Login />}</div>;
      //import{useselector ,usedispatch} from redux
      //import{login,logout,selectuser} from userslice
      //import auth from firebase
      
            #4-->Imessage(it contain sidebar and chat part) 
            
                 [
                      const Imessage = () => {
                      
                      const theme = useTheme(); //for theme
                      const matches = useMediaQuery(theme.breakpoints.down("xs")); //to set point after which it will be act like drop down button.see it documentatio no need to learn just see it.
                      const [open, setOpen] = useState(true); ///function to change state
                      return (
                       <div className="Imessage">
                        {/*matches=it is a point after which chat app change design */}
                         {matches ? (   //when match will be ture then it will open in mobile version elese if it doesnt matches then simply sidebar and chatbar will be shown
                           <SwipeableDrawer       //this is basically dropdown when our app will in small size then it will be used as drop down fuction
                             className="Imessage__swiper"
                             anchor="left"    //direction from which drop down will happen
                             open={open}       //it will display wheter it is open or not
                             onClose={() => setOpen(false)}
                             onOpen={() => setOpen(true)}
                           >
                             <Sidebar />  //here sidebar is in <SwiperableDrawer> because in will be in drop down fuction
                           </SwipeableDrawer>
                         ) : (
                           <Sidebar />     //sidebar will be shown here
                         )}
                                {/*when caht part will open then setopen function will be assign ture */}
                         <Chat handleOpen={() => setOpen(true)} />    //we will no put <chat /> in drop down because we dont want chat to drop down
                       </div>
                    //import theme ,mediaqury,swipabledrawer
                                    ]
                                    
                                    
                                    
                   #5-SIDEBAR
                           
                             //TOOLTIP FUNCTION
                           const LightTooltip = withStyles(theme => ({ //it show anu information or message when user hover over particular elemetn
                             tooltip: {
                               backgroundColor: theme.palette.common.white,
                               color: "rgba(0, 0, 0, 0.87)",
                               boxShadow: theme.shadows[1],
                               fontSize: 11
                             }
                           }))(Tooltip);
                           
                                   //main function AND RETURN FUNCTION
                           const Sidebar = () => {
                             const user = useSelector(selectUser); //to select user
                             const [chat, setChat] = useState([]);     //to store chat in array
                             const [open, setOpen] = useState(false);      //that particular group is opwn or not
                             const [chatName, setChatName] = useState("");  //to assigh group name
                             const [search, setSearch] = useState("");     //for searching channel
                             const handleOpen = () => { //when that group will be closed  then setopen will assign true
                               setOpen(true);
                             };
                           
                             const handleClose = () => {
                               setOpen(false);
                             };
                             useEffect(() => { //collect data from data base of id
                               db.collection("chats").onSnapshot(snapshot =>       //it will gether real time data form could storage using onsnapshot
                                 setChat(
                                   snapshot.docs.map(doc => {
                                     return {
                                       id: doc.id,
                                       data: doc.data()
                                     };
                                   })
                                 )
                               );
                             }, []);
             //going to database find chats then add a group/chatname and then handleclose for this particulr group
                             const addChannel = () => {        //adding groups
                               if (chatName) {
                                 db.collection("chats").add({
                                   chatName: chatName        //chatname from what we write in pop up
                                                             //chatName especially becaue  const [chatName, setChatName] = useState(""); this is assign above to store group name
                                 });
                                 setChatName(""); //so for next time addchannel input will be empty
                                 handleClose();
                               }
                             };
                             //this is for last message
                             const filteredChats = chat.filter(chat => {
                               return chat.data.chatName.includes(search.toLowerCase());
                             });
                           
                           
                             return (
                               <div className="sidebar">
                           
                                          {/*IT IS TO MAKE ADD CHANNEL  BUTTON DIAGONALY AND THERIR PROPERTY */}
                           
                                 //this is for adding channel so thats why there is no group part there when we click on add group then there will new group will add else there will noting will be shown
                                 <Modal    //provides a solid foundation for creating dialogs, popovers, lightboxes, or whatever else.
                                   aria-labelledby="transition-modal-title"
                                   aria-describedby="transition-modal-description"
                                   open={open}
                                   onClose={handleClose}      //handle is prebuild fuction inside it there is setopen functon.
                                   className="sidebar__addChatModal"
                                 >
                                   <Fade in={open}>          {/*Fade is a animation tool of material ui , basically one popup will occure to add channel*/}  
                                     <div className="sidebar__addChatModalContainer"> //it is pop 
                                       <h2>Add Channel</h2>
                                       <TextField    //writing chat name in input
                                         value={chatName} //channel name
                                         onChange={e => setChatName(e.target.value)} //channel name will be direct from input we type
                                         id="outlined-basic"
                                         label="Enter Channel Name"
                                         variant="outlined"
                                         margin="dense"
                                       />
                                       <Button onClick={addChannel} className="sidebar__addChannelButton">
                                         Add Channel
                                       </Button>
                                     </div>
                                   </Fade>
                                 </Modal>      
                           
                                       {/*SIDEBAR HEADER */}
                           
                                 <div className="sidebar__header">
                                   <LightTooltip title="Logout">   {/*when we hover on avtar then logout will be occure */}
                                     <Avatar
                                       onClick={() => auth.signOut()}          //*signout the user so the listener in app.js will
                                       //dispatch the logout action
                                       src={user.photo}
                                       className="sidebar__avatar"
                                     />
                                   </LightTooltip>
                           
                                   <div className="sidebar__input">
                                     <SearchIcon />
                                     <input
                                       value={search}  //from above :-const[search,setsearch]
                                       onChange={e => setSearch(e.target.value)}
                                       type="text"
                                       placeholder="Search"
                                     />
                                   </div>
                                 </div>
                           
                                       {/*sign and add chat button */}
                                 <div className="sidebar__actions">
                                   <Button onClick={() => auth.signOut()}>SignOut</Button>
                                   <Button onClick={handleOpen}>Add Chat</Button>
                                 </div>
                                         {/*last message */}
                                 <div className="sidebar__chats">
                                   {filteredChats.map(({ id, data: { chatName } }) => {
                                     return <SidebarChat key={id} id={id} chatName={chatName} />;
                                   })}
                                 </div>
                               </div>
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                    
                                    
                                    
                                    
                                    
                                    
                                    
---------------------------------------------Login page----------------------------------------------------------------------------------------------------------
*make changes in counterslice.js and rename counterslice.js to userslice.js
       TO UNDERSTAND REDUX WITH WHICH WE ARE MAKING LOGIN PAGE
              
 <img src="  https://7088297.fs1.hubspotusercontent-na1.net/hubfs/7088297/GenUI_April_2020/Images/modular-redux-tutorial-redux-toolkit.png" />

*CREATE NEW FILE NAME FIREBASE AND THEN INSTLALL FIREBASE USING TERMINAL IN THAT APP
           --PASTE GOOGLE AUTHANTICATION CODE COPIES FROM FIREBASE INTO FIREBSE.JS. then import it form firebase
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          #ONSNAPSHOT--it to get real time update/information with cloud storage
          #useState([]) --it if array in usesate
          #onOpen()
          #onClose()
          #handleOpen()
-------------------------------------------------USER SLICE AND CAHT SLICE AND STORE.JS [REDUX]-----------------------------------------------------------------------------------------

                     #NOTES=Userslice is for authanticate user or to help in login for particular users
                            Chatslice is same as user slice but for chat and little bit different/
                     #IMPORTANT CALL:-
                               1->selectUser
                               2->selectId
                               3->selectName

                          
                          
                     #CODE-USERSLICE:----
                    [ 
                    
                    
                         import { createSlice } from "@reduxjs/toolkit";

                          export const userSlice = createSlice({
                            name: "user",
                            initialState: {         //assigning initial value
                              user: null         //initially during login there is no user and in login we use only user information so ther is no other information user but in chatreducer we need to getther other information to such as name,id,message,
                            },
                            reducers: {   //here in reducer we will use to function login and logout because this is what we need to login.
                              login: (state, action) => {
                                state.user = action.payload;
                              },
                              logout: state => {
                                state.user = null;
                              }
                            }
                          });
                          
                          export const { logout, login } = userSlice.actions;  //exporting that fuction what we need to login
                          
                          export const selectUser = state => state.user.user;    //exporting  selectUser function which we will use in login to fach user 
                          
                          export default userSlice.reducer;

   


                                                                      ]


                       #CODE-CHATSLICE:-
                      
                      [
                         import { createSlice } from "@reduxjs/toolkit";
                         
                         export const chatSlice = createSlice({
                           name: "name",
                           initialState: {
                             chatId: null,
                             chatName: null
                           },
                           reducers: {
                             setChat: (state, action) => {
                               state.chatId = action.payload.chatId;
                               state.chatName = action.payload.chatName;
                             }
                           }
                         });
                         
                         export const { setChat } = chatSlice.actions;
                         
                         export const selectChatId = state => state.chat.chatId;   //here we are exporting chat id wich we will use in to connect sidebarchat to link chatbar and to fatch user with their chatmessage
                         export const selectChatName = state => state.chat.chatName;
                         
                         export default chatSlice.reducer;


                                                               ]
                                   
                                   
                    #STORE.JS:-importing reducer from both userslice and chatslice
                           
                           import { configureStore } from "@reduxjs/toolkit";
                              import userReducer from "./userSlice";
                              import chatReducer from "./chatSlice";
                              export default configureStore({
                                reducer: {                        ///assigning reducre of both chat and user
                                  user: userReducer,
                                  chat: chatReducer
                                }
                              });

----------------------------------------------------------FIREBASE--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                          
                                          
                                          JUST COPY CODE FROM FIREBASE WEBSITE.
                                            
                                            
----------------------------------------------------------SUMMARY OF THIS PROJECT--------------------------------------------------------------------------------------------------------------------------
    -->  Set redux component (userslice,chatslice,store.js) after that set firebase with google auth and firebase storage from firebase webste.
    -->  After that make login page with firebase auth.
    -->  Now go to App.js make function to  login and logout and gether info form google of consumer like avtart photo etc,now check whether user is already signup or not
           if not then show them login page else show then direct <Imessage /> page that into our app.
    -->Now in <Imessage /> page we will set a property to see screen size ,according to that we will make drop down in which we will show sidebar and chat part will not be included in that
         In this page we wil connect out sidebar and chat part.
    -->Sidebar   
        
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               

            
