WEB CHAT APP USING REACT.JS AND REDUX.
  
    *STEPS TO SETUP ENVIROMENT FOR REDUX REACT-APP:-
     1--->install react-app with redux template using this code:-[npx create-react-app my-app --template redux]
     2--->delete unnessary folder from file like:-app.test , logo svg ,setup
     3--->clear all header code of app.js and clear code of app.css.
     4--->delete all features section code file except counterslice.js.
       
    
     *TO COMMENT YOU HAVE TO USE THIS:-  {/*  */}
     *USE REACT SNIPET USING(rfce) YOU HAVE TO INSTALL EXTENSION FOR THAT.
     *INSTALL MATERIAL UI AND THEN MATERIAL ICON FROM WEBSITE.
    
----------------------------------------------------------------------STRUCTURE-----------------------------------------------------------------------------------------------------------
    #USERSLICE-->STORE.JS-->FIREBASE-->LOGIN-->APP.JS(this is structure to implement/learn react app.
    
       *STEPS OF CREATING APP SECTION:
              1--created sidebar and chat part of js with their css.And then imported them in app.js.
              2-- SIDEBAR:-
                       --sidebar_header
                       --sidebar_chats(no of user or group)
              3--CHAT PART:-
                        --charpart-header
                        --chatpart-message
                        --chatpart-input
              4--USERSLICE.JS ,CAHTSLICE {this is redux)
                    --then import that in store.js.
--------------------------------------------------------------CSS AND HTML---------------------------------------------------------------------------------------------------------
*TO MAKE ICON A BUTTON WE JUST DO THIS:- put particular icon between following tags
   <IconButton>
          <searchicon>
   </IconButton>

  *IF THERE IF INPUT DIV AND IT HAD CLASS CALL "SIDEBAR-INPUT" AND IF WE WANT TO MAKE CSS CHANGE TO INNER OF INPUT THE WE UES:
         [ .sidebar-input > input] --> there > means inside input .
         
   * IF SMALL IS CLASS/DIV  INSIDE SIDEBARCHAT AND WE WANT TO MODIFY CSS OF SMALL THEN  WE WILL USE THIS :-
                    [ SidebarChat_info > small  ]
*OVERFLOW ---it is scrolling function in css

----------------------------------------------------------------FUNCTION IN RECT FOR DIFFRENT WORK-------------------------------------------------------------------------------
     #1--> BUTTON AND INPUT   
              *FUNCTION
                        const[Input ,setInput] =useState("");//to keep track of input
                         const sendMessage=(e)=>{
                         e.preventDefault(); //so that after refresh its not  gone

                         setInput("");  //so that after sending messagge the input gets erase so that we can write out next message
              *PLACE TO BE IMPLEMENTED THIS FUNCTON
                         <form action="">
                          <input placeholder="Type Message"  
                          onChange={e=>setInput(e.target.value)} //on change what we type it get change in input
                          value={Input}
                          type="text" />
                          <button onClick={sendMessage}>
                          send message</button>
                          </form>


      #2-->SIGN IN AND ADDING FIREBASE TO IT
                   
---------------------------------------------Login page----------------------------------------------------------------------------------------------------------
*make changes in counterslice.js and rename counterslice.js to userslice.js
       TO UNDERSTAND REDUX WITH WHICH WE ARE MAKING LOGIN PAGE
              
 <img src="  https://7088297.fs1.hubspotusercontent-na1.net/hubfs/7088297/GenUI_April_2020/Images/modular-redux-tutorial-redux-toolkit.png" />

*CREATE NEW FILE NAME FIREBASE AND THEN INSTLALL FIREBASE USING TERMINAL IN THAT APP
           --PASTE GOOGLE AUTHANTICATION CODE COPIES FROM FIREBASE INTO FIREBSE.JS. then import it form firebase
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          #ONSNAPSHOT--it to get real time information from differnt fuction
          #useState([]) --it if array in usesate
-------------------------------------------------USER SLICE AND CAHT SLICE AND STORE.JS [REDUX]-----------------------------------------------------------------------------------------

                     #NOTES=Userslice is for authanticate user or to help in login for particular users
                            Chatslice is same as user slice but for chat and little bit different/
                     #IMPORTANT CALL:-
                               1->selectUser
                               2->selectId
                               3->selectName

                          
                          
                     #CODE-USERSLICE:----
                    [ 
                    
                    
                         import { createSlice } from "@reduxjs/toolkit";

                          export const userSlice = createSlice({
                            name: "user",
                            initialState: {         //assigning initial value
                              user: null         //initially during login there is no user and in login we use only user information so ther is no other information user but in chatreducer we need to getther other information to such as name,id,message,
                            },
                            reducers: {   //here in reducer we will use to function login and logout because this is what we need to login.
                              login: (state, action) => {
                                state.user = action.payload;
                              },
                              logout: state => {
                                state.user = null;
                              }
                            }
                          });
                          
                          export const { logout, login } = userSlice.actions;  //exporting that fuction what we need to login
                          
                          export const selectUser = state => state.user.user;    //exporting  selectUser function which we will use in login to fach user 
                          
                          export default userSlice.reducer;

   


                                                                      ]


                       #CODE-CHATSLICE:-
                      
                      [
                         import { createSlice } from "@reduxjs/toolkit";
                         
                         export const chatSlice = createSlice({
                           name: "name",
                           initialState: {
                             chatId: null,
                             chatName: null
                           },
                           reducers: {
                             setChat: (state, action) => {
                               state.chatId = action.payload.chatId;
                               state.chatName = action.payload.chatName;
                             }
                           }
                         });
                         
                         export const { setChat } = chatSlice.actions;
                         
                         export const selectChatId = state => state.chat.chatId;   //here we are exporting chat id wich we will use in to connect sidebarchat to link chatbar and to fatch user with their chatmessage
                         export const selectChatName = state => state.chat.chatName;
                         
                         export default chatSlice.reducer;


                                                               ]
                                   
                                   
                    #STORE.JS:-importing reducer from both userslice and chatslice
                           
                           import { configureStore } from "@reduxjs/toolkit";
                              import userReducer from "./userSlice";
                              import chatReducer from "./chatSlice";
                              export default configureStore({
                                reducer: {                        ///assigning reducre of both chat and user
                                  user: userReducer,
                                  chat: chatReducer
                                }
                              });

                      
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               

            
